// <auto-generated />
using System;
using BackAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BackAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231015100913_Initial5")]
    partial class Initial5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BackAPI.Models.Appartenir", b =>
                {
                    b.Property<int>("Id_apart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_apart");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_apart"));

                    b.Property<int?>("AvionId_aeronef")
                        .HasColumnType("integer");

                    b.Property<int>("Capacite")
                        .HasColumnType("integer")
                        .HasColumnName("capacite");

                    b.Property<int?>("ClasseServiceId_classe")
                        .HasColumnType("integer");

                    b.Property<int>("Id_aeronef")
                        .HasColumnType("integer")
                        .HasColumnName("id_aeronef");

                    b.Property<int>("Id_classe")
                        .HasColumnType("integer")
                        .HasColumnName("id_classe");

                    b.HasKey("Id_apart");

                    b.HasIndex("AvionId_aeronef");

                    b.HasIndex("ClasseServiceId_classe");

                    b.ToTable("appartenir");
                });

            modelBuilder.Entity("BackAPI.Models.Avion", b =>
                {
                    b.Property<int>("Id_aeronef")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_aeronef");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_aeronef"));

                    b.Property<string>("Type_aeronef")
                        .HasColumnType("text")
                        .HasColumnName("type_aeronef");

                    b.HasKey("Id_aeronef");

                    b.ToTable("avion");
                });

            modelBuilder.Entity("BackAPI.Models.ClasseService", b =>
                {
                    b.Property<int>("Id_classe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_classe");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_classe"));

                    b.Property<int>("Num_siege")
                        .HasColumnType("integer")
                        .HasColumnName("num_siege");

                    b.Property<string>("Type_classe")
                        .HasColumnType("text")
                        .HasColumnName("type_classe");

                    b.HasKey("Id_classe");

                    b.ToTable("classeservice");
                });

            modelBuilder.Entity("BackAPI.Models.Itineraire", b =>
                {
                    b.Property<int>("Id_itineraire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_itineraire");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_itineraire"));

                    b.Property<string>("Aeroport_arrive")
                        .HasColumnType("text")
                        .HasColumnName("aeroport_arrive");

                    b.Property<string>("Aeroport_depart")
                        .HasColumnType("text")
                        .HasColumnName("aeroport_depart");

                    b.HasKey("Id_itineraire");

                    b.ToTable("itineraire");
                });

            modelBuilder.Entity("BackAPI.Models.Passager", b =>
                {
                    b.Property<int>("Id_passager")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_passager");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_passager"));

                    b.Property<string>("Adresse_passager")
                        .HasColumnType("text")
                        .HasColumnName("adresse_passager");

                    b.Property<string>("Email_passager")
                        .HasColumnType("text")
                        .HasColumnName("email_passager");

                    b.Property<string>("Nom_passager")
                        .HasColumnType("text")
                        .HasColumnName("nom_passager");

                    b.Property<long>("Num_passeport")
                        .HasColumnType("bigint")
                        .HasColumnName("num_passeport");

                    b.Property<long>("Phone_passager")
                        .HasColumnType("bigint")
                        .HasColumnName("phone_passager");

                    b.Property<string>("Prenom_passager")
                        .HasColumnType("text")
                        .HasColumnName("prenom_passager");

                    b.HasKey("Id_passager");

                    b.ToTable("passager");
                });

            modelBuilder.Entity("BackAPI.Models.Reservation", b =>
                {
                    b.Property<int>("Num_reservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("num_reservation");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Num_reservation"));

                    b.Property<int?>("ClasseServiceId_classe")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_reservation")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_reservation");

                    b.Property<int>("Id_classe")
                        .HasColumnType("integer")
                        .HasColumnName("id_classe");

                    b.Property<int>("Id_passager")
                        .HasColumnType("integer")
                        .HasColumnName("id_passager");

                    b.Property<int>("Id_vol")
                        .HasColumnType("integer")
                        .HasColumnName("id_vol");

                    b.Property<int?>("PassagerId_passager")
                        .HasColumnType("integer");

                    b.Property<int?>("VolId_vol")
                        .HasColumnType("integer");

                    b.HasKey("Num_reservation");

                    b.HasIndex("ClasseServiceId_classe");

                    b.HasIndex("PassagerId_passager");

                    b.HasIndex("VolId_vol");

                    b.ToTable("reservation");
                });

            modelBuilder.Entity("BackAPI.Models.Vol", b =>
                {
                    b.Property<int>("Id_vol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_vol");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_vol"));

                    b.Property<int?>("AvionId_aeronef")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date_depart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_depart");

                    b.Property<DateTime>("Heure_depart")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("heure_depart");

                    b.Property<int>("Id_aeronef")
                        .HasColumnType("integer")
                        .HasColumnName("id_aeronef");

                    b.Property<int>("Id_itineraire")
                        .HasColumnType("integer")
                        .HasColumnName("id_itineraire");

                    b.Property<int?>("ItineraireId_itineraire")
                        .HasColumnType("integer");

                    b.Property<string>("Num_vol")
                        .HasColumnType("text")
                        .HasColumnName("num_vol");

                    b.Property<double>("Remboursement")
                        .HasColumnType("double precision")
                        .HasColumnName("remboursement");

                    b.HasKey("Id_vol");

                    b.HasIndex("AvionId_aeronef");

                    b.HasIndex("ItineraireId_itineraire");

                    b.ToTable("vol");
                });

            modelBuilder.Entity("BackAPI.Models.Appartenir", b =>
                {
                    b.HasOne("BackAPI.Models.Avion", "Avion")
                        .WithMany()
                        .HasForeignKey("AvionId_aeronef");

                    b.HasOne("BackAPI.Models.ClasseService", "ClasseService")
                        .WithMany()
                        .HasForeignKey("ClasseServiceId_classe");

                    b.Navigation("Avion");

                    b.Navigation("ClasseService");
                });

            modelBuilder.Entity("BackAPI.Models.Reservation", b =>
                {
                    b.HasOne("BackAPI.Models.ClasseService", "ClasseService")
                        .WithMany()
                        .HasForeignKey("ClasseServiceId_classe");

                    b.HasOne("BackAPI.Models.Passager", "Passager")
                        .WithMany()
                        .HasForeignKey("PassagerId_passager");

                    b.HasOne("BackAPI.Models.Vol", "Vol")
                        .WithMany()
                        .HasForeignKey("VolId_vol");

                    b.Navigation("ClasseService");

                    b.Navigation("Passager");

                    b.Navigation("Vol");
                });

            modelBuilder.Entity("BackAPI.Models.Vol", b =>
                {
                    b.HasOne("BackAPI.Models.Avion", "Avion")
                        .WithMany()
                        .HasForeignKey("AvionId_aeronef");

                    b.HasOne("BackAPI.Models.Itineraire", "Itineraire")
                        .WithMany()
                        .HasForeignKey("ItineraireId_itineraire");

                    b.Navigation("Avion");

                    b.Navigation("Itineraire");
                });
#pragma warning restore 612, 618
        }
    }
}
